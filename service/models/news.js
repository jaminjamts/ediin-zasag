import mongoose from "mongoose";

const newsSchema = new mongoose.Schema(
  {
    title: {
      type: String,
      required: true,
      trim: true,
      minlength: 5,
      maxlength: 250,
    },

    summary: {
      type: String,
      maxlength: 300,
    },
    content: {
      // –ë“Ø—Ç—ç–Ω –º—ç–¥—ç—ç–Ω–∏–π —Ç–µ–∫—Å—Ç
      type: String,
      required: true,
    },
    images: [
      // –û–ª–æ–Ω –∑—É—Ä–∞–≥ —Ö–∞–¥–≥–∞–ª–∞—Ö array
      {
        type: String,
        default: null,
      },
    ],
    author: {
      // –ù–∏–π—Ç–ª—ç–≥—á
      type: String,
      default: "WSJ Staff",
      trim: true,
    },
    category: {
      type: mongoose.Schema.Types.ObjectId,
      ref: "Category",
      required: true,
    },
    tags: [
      // RSS –±–æ–ª–æ–Ω —Ö–∞–π–ª—Ç–∞–Ω–¥ –∞—à–∏–≥–ª–∞—Ö —Ç“Ø–ª—Ö“Ø“Ø—Ä “Ø–≥—Å
      { type: String, trim: true, lowercase: true },
    ],

    publishedAt: {
      // –•—ç–∑—ç—ç –Ω–∏–π—Ç–ª—ç–≥–¥—Å—ç–Ω
      type: Date,
      default: Date.now,
    },
    views: {
      // “Æ–∑—Å—ç–Ω —Ç–æ–æ
      type: Number,
      default: 0,
      min: 0,
    },
    source: {
      // –ú—ç–¥—ç—ç–Ω–∏–π —ç—Ö —Å—É—Ä–≤–∞–ª–∂
      type: String,
      default: "WSJ",
    },
    region: {
      // –û—Ä—á–∏–Ω, —É–ª—Å, –±“Ø—Å –Ω—É—Ç–∞–≥
      type: String,
      default: "Global",
    },
    slug: {
      type: String,
      unique: true,
    },
  },
  { timestamps: true } // createdAt & updatedAt –∞–≤—Ç–æ–º–∞—Ç–∞–∞—Ä “Ø“Ø—Å–Ω—ç
);

// üîπ Slug-–≥ title-—Å –∞–≤—Ç–æ–º–∞—Ç–∞–∞—Ä “Ø“Ø—Å–≥—ç—Ö hook
newsSchema.pre("save", function (next) {
  if (this.isModified("title")) {
    this.slug = this.title
      .toLowerCase()
      .replace(/[^a-z0-9–∞-—è”©“Ø—ë]+/g, "-")
      .replace(/(^-|-$)/g, "");
  }
  next();
});

// üîπ Indexes for performance
newsSchema.index({ slug: 1 });
newsSchema.index({ category: 1 });
newsSchema.index({ isPublished: 1 });
newsSchema.index({ publishedAt: -1 });

const News = mongoose.model("News", newsSchema);
export default News;
